//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CollisionRadiusComponent collisionRadius { get { return (CollisionRadiusComponent)GetComponent(GameComponentsLookup.CollisionRadius); } }
    public bool hasCollisionRadius { get { return HasComponent(GameComponentsLookup.CollisionRadius); } }

    public void AddCollisionRadius(float newRadius) {
        var index = GameComponentsLookup.CollisionRadius;
        var component = (CollisionRadiusComponent)CreateComponent(index, typeof(CollisionRadiusComponent));
        component.radius = newRadius;
        AddComponent(index, component);
    }

    public void ReplaceCollisionRadius(float newRadius) {
        var index = GameComponentsLookup.CollisionRadius;
        var component = (CollisionRadiusComponent)CreateComponent(index, typeof(CollisionRadiusComponent));
        component.radius = newRadius;
        ReplaceComponent(index, component);
    }

    public void RemoveCollisionRadius() {
        RemoveComponent(GameComponentsLookup.CollisionRadius);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCollisionRadius;

    public static Entitas.IMatcher<GameEntity> CollisionRadius {
        get {
            if (_matcherCollisionRadius == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CollisionRadius);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCollisionRadius = matcher;
            }

            return _matcherCollisionRadius;
        }
    }
}
